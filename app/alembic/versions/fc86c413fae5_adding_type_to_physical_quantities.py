"""adding type to Physical quantities

Revision ID: fc86c413fae5
Revises: 3d5a37da853c
Create Date: 2025-06-27 11:08:25.045720

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'fc86c413fae5'
down_revision = '3d5a37da853c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('linearunitphysicalquantitylink')
    op.drop_table('functionalunitphysicalquantitylink')
    op.add_column('physicalquantity', sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('physicalquantity', sa.Column('linear_unit_id', sa.Uuid(), nullable=True))
    op.add_column('physicalquantity', sa.Column('functional_unit_id', sa.Uuid(), nullable=True))
    op.create_foreign_key(None, 'physicalquantity', 'functionalunit', ['functional_unit_id'], ['id'])
    op.create_foreign_key(None, 'physicalquantity', 'linearunit', ['linear_unit_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'physicalquantity', type_='foreignkey')
    op.drop_constraint(None, 'physicalquantity', type_='foreignkey')
    op.drop_column('physicalquantity', 'functional_unit_id')
    op.drop_column('physicalquantity', 'linear_unit_id')
    op.drop_column('physicalquantity', 'type')
    op.create_table('functionalunitphysicalquantitylink',
    sa.Column('functional_unit_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('physical_quantity_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['functional_unit_id'], ['functionalunit.id'], name=op.f('functionalunitphysicalquantitylink_functional_unit_id_fkey')),
    sa.ForeignKeyConstraint(['physical_quantity_id'], ['physicalquantity.id'], name=op.f('functionalunitphysicalquantitylink_physical_quantity_id_fkey')),
    sa.PrimaryKeyConstraint('functional_unit_id', 'physical_quantity_id', name=op.f('functionalunitphysicalquantitylink_pkey'))
    )
    op.create_table('linearunitphysicalquantitylink',
    sa.Column('linear_unit_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('physical_quantity_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['linear_unit_id'], ['linearunit.id'], name=op.f('linearunitphysicalquantitylink_linear_unit_id_fkey')),
    sa.ForeignKeyConstraint(['physical_quantity_id'], ['physicalquantity.id'], name=op.f('linearunitphysicalquantitylink_physical_quantity_id_fkey')),
    sa.PrimaryKeyConstraint('linear_unit_id', 'physical_quantity_id', name=op.f('linearunitphysicalquantitylink_pkey'))
    )
    # ### end Alembic commands ###